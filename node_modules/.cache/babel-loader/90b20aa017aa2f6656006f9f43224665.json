{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanya\\\\react\\\\sachin\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // Step 2 - Including the react-fusioncharts component\n\nimport ReactFC from 'react-fusioncharts'; // Step 3 - Including the fusioncharts library\n\nimport FusionCharts from 'fusioncharts'; // Step 4 - Including the map renderer\n\nimport FusionMaps from 'fusioncharts/fusioncharts.maps'; // Step 5 - Including the map definition file\n\nimport World from 'fusioncharts/maps/fusioncharts.world'; // Step 6 - Including the theme as fusion\n\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, FusionMaps, World, FusionTheme);\nconst chartConfigs = {\n  type: 'world',\n  width: '800',\n  height: '550',\n  dataFormat: 'json',\n  dataSource: {\n    // Map Configuration\n    \"chart\": {\n      \"caption\": \"Average Annual Population Growth\",\n      \"subcaption\": \" 1955-2015\",\n      \"numbersuffix\": \"%\",\n      \"includevalueinlabels\": \"1\",\n      \"labelsepchar\": \": \",\n      \"entityFillHoverColor\": \"#FFF9C4\",\n      \"theme\": \"fusion\"\n    },\n    // Aesthetics; ranges synced with the slider\n    \"colorrange\": {\n      \"minvalue\": \"0\",\n      \"code\": \"#FFE0B2\",\n      \"gradient\": \"1\",\n      \"color\": [{\n        \"minvalue\": \"0.5\",\n        \"maxvalue\": \"1.0\",\n        \"color\": \"#FFD74D\"\n      }, {\n        \"minvalue\": \"1.0\",\n        \"maxvalue\": \"2.0\",\n        \"color\": \"#FB8C00\"\n      }, {\n        \"minvalue\": \"2.0\",\n        \"maxvalue\": \"3.0\",\n        \"color\": \"#E65100\"\n      }]\n    },\n    // Source data as JSON --> id represents countries of world.\n    \"data\": [{\n      \"id\": \"NA\",\n      \"value\": \".82\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"SA\",\n      \"value\": \"2.04\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"AS\",\n      \"value\": \"1.78\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"EU\",\n      \"value\": \".40\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"AF\",\n      \"value\": \"2.58\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"AU\",\n      \"value\": \"1.30\",\n      \"showLabel\": \"1\"\n    }]\n  }\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    id: \"frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"world-map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"runs\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wickets\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"runs_conceded\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:\\Tanya\\react\\sachin\\src\\index.js"],"names":["React","useState","ReactDOM","ReactFC","FusionCharts","FusionMaps","World","FusionTheme","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Step 4 - Including the map renderer\nimport FusionMaps from 'fusioncharts/fusioncharts.maps';\n\n// Step 5 - Including the map definition file\nimport World from 'fusioncharts/maps/fusioncharts.world';\n\n// Step 6 - Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';    \nReactFC.fcRoot(FusionCharts, FusionMaps, World, FusionTheme);\n\nconst chartConfigs = {\n    type: 'world',\n    width: '800',\n    height: '550',\n    dataFormat: 'json',\n    dataSource: {\n    // Map Configuration\n        \"chart\": {\n                \"caption\": \"Average Annual Population Growth\",\n                \"subcaption\": \" 1955-2015\",\n                \"numbersuffix\": \"%\",\n                \"includevalueinlabels\": \"1\",\n                \"labelsepchar\": \": \",\n                \"entityFillHoverColor\": \"#FFF9C4\",\n                \"theme\": \"fusion\"\n        },\n        // Aesthetics; ranges synced with the slider\n        \"colorrange\": {\n            \"minvalue\": \"0\",\n            \"code\": \"#FFE0B2\",\n            \"gradient\": \"1\",\n            \"color\": [{\n                \"minvalue\": \"0.5\",\n                \"maxvalue\": \"1.0\",\n                \"color\": \"#FFD74D\"\n            }, {\n                \"minvalue\": \"1.0\",\n                \"maxvalue\": \"2.0\",\n                \"color\": \"#FB8C00\"\n            }, {\n                \"minvalue\": \"2.0\",\n                \"maxvalue\": \"3.0\",\n                \"color\": \"#E65100\"\n            }]\n        },\n        // Source data as JSON --> id represents countries of world.\n        \"data\": [{\n            \"id\": \"NA\",\n            \"value\": \".82\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"SA\",\n            \"value\": \"2.04\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AS\",\n            \"value\": \"1.78\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"EU\",\n            \"value\": \".40\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AF\",\n            \"value\": \"2.58\",\n            \"showLabel\": \"1\"\n        }, {\n            \"id\": \"AU\",\n            \"value\": \"1.30\",\n            \"showLabel\": \"1\"\n        }]\n    }\n}\n\nconst App=()=>{\n\n    return(\n        <div id=\"frame\">\n           <div className=\"chart-row\">\n            <div id=\"world-map\">\n            <ReactFC {...chartConfigs}/>\n            </div>\n            <div id=\"runs\" className=\"inline\">\n            </div>\n          </div>\n          <div className=\"chart-row\">\n            <div id=\"wickets\" className=\"inline\">\n            </div>    \n            <div id=\"runs_conceded\" className=\"inline\">\n          </div>\n          \n          </div>  \n        </div>\n    )\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}