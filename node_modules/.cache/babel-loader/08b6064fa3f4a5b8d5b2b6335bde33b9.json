{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanya\\\\react\\\\sachin\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // Step 2 - Including the react-fusioncharts component\n\nimport ReactFC from 'react-fusioncharts'; // Step 3 - Including the fusioncharts library\n\nimport FusionCharts from 'fusioncharts'; // Step 4 - Including the map renderer\n\nimport FusionMaps from 'fusioncharts/fusioncharts.maps'; // Step 5 - Including the map definition file\n\nimport World from 'fusionmaps-xt-definition.zip/maps/fusioncharts.worldwithcountries';\nimport Column2D from 'fusioncharts/fusioncharts.charts'; // Step 6 - Including the theme as fusion\n\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, FusionMaps, World, FusionTheme, Column2D);\nconst chartConfigs = {\n  type: 'maps/worldwithcountries',\n  renderAt: 'world-map',\n  width: '650',\n  height: '450',\n  dataFormat: 'json',\n  dataSource: {\n    \"map\": {\n      \"theme\": \"fusion\",\n      \"caption\": \"Played Against\",\n      \"subcaption\": \"Win Ratio\"\n    },\n    \"colorrange\": {\n      \"minvalue\": \"0\",\n      \"startlabel\": \"Low\",\n      \"endlabel\": \"High\",\n      \"code\": \"#FF4411\",\n      \"gradient\": \"1\",\n      \"color\": [{\n        \"maxvalue\": \"25\",\n        \"code\": \"#FFDD44\",\n        \"displayValue\": \"Median\"\n      }, {\n        \"maxvalue\": \"100\",\n        \"code\": \"#6baa01\"\n      }]\n    },\n    \"data\": [{\n      \"id\": \"116\",\n      \"value\": \"10\",\n      \"link\": \"newchart-json-pak\",\n      \"showLabel\": \"1\"\n    }, {\n      \"id\": \"104\",\n      \"value\": \"40\",\n      \"link\": \"newchart-json-Texas\"\n    }, {\n      \"id\": \"118\",\n      \"value\": \"80\",\n      \"link\": \"newchart-json-NorthCarolina\"\n    }, {\n      \"id\": \"05\",\n      \"value\": \"100\",\n      \"link\": \"newchart-json-NorthCarolina\"\n    }, {\n      \"id\": \"110\",\n      \"value\": \"0\",\n      \"link\": \"newchart-json-Texas\"\n    }],\n    \"linkeddata\": [{\n      \"id\": \"pak\",\n      \"linkedchart\": {\n        \" width\": '650',\n        \"height\": '450',\n        \"chart\": {\n          \"caption\": \"Monthly revenue for last year\",\n          \"subCaption\": \"Harry's SuperMart\",\n          \"xAxisName\": \"Month\",\n          \"yAxisName\": \"Revenues (In USD)\",\n          \"numberPrefix\": \"$\",\n          \"theme\": \"fusion\"\n        },\n        \"data\": [{\n          \"label\": \"Jan\",\n          \"value\": \"420000\"\n        }, {\n          \"label\": \"Feb\",\n          \"value\": \"810000\"\n        }, {\n          \"label\": \"Mar\",\n          \"value\": \"720000\"\n        }, {\n          \"label\": \"Apr\",\n          \"value\": \"550000\"\n        }, {\n          \"label\": \"May\",\n          \"value\": \"910000\"\n        }, {\n          \"label\": \"Jun\",\n          \"value\": \"510000\"\n        }, {\n          \"label\": \"Jul\",\n          \"value\": \"680000\"\n        }, {\n          \"label\": \"Aug\",\n          \"value\": \"620000\"\n        }, {\n          \"label\": \"Sep\",\n          \"value\": \"610000\"\n        }, {\n          \"label\": \"Oct\",\n          \"value\": \"490000\"\n        }, {\n          \"label\": \"Nov\",\n          \"value\": \"900000\"\n        }, {\n          \"label\": \"Dec\",\n          \"value\": \"730000\"\n        }]\n      }\n    }]\n  },\n  \"events\": {\n    \"beforeRender\": function (e) {\n      //Configure the second level chart's properties\n      e.sender.configureLink({\n        type: \"column2d\",\n        renderAt: 'runs',\n        overlayButton: {\n          message: 'Back',\n          fontColor: '880000',\n          bgColor: 'FFEEEE',\n          borderColor: '660000'\n        }\n      }, 0);\n    }\n  }\n};\nconst style = {\n  \"display\": \"flex\"\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    id: \"frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chart-row\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"world-map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"runs\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chart-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wickets\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"runs_conceded\",\n    className: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:\\Tanya\\react\\sachin\\src\\index.js"],"names":["React","useState","ReactDOM","ReactFC","FusionCharts","FusionMaps","World","Column2D","FusionTheme","fcRoot","chartConfigs","type","renderAt","width","height","dataFormat","dataSource","e","sender","configureLink","overlayButton","message","fontColor","bgColor","borderColor","style","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Step 4 - Including the map renderer\nimport FusionMaps from 'fusioncharts/fusioncharts.maps';\n\n// Step 5 - Including the map definition file\nimport World from 'fusionmaps-xt-definition.zip/maps/fusioncharts.worldwithcountries';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\n// Step 6 - Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';    \nReactFC.fcRoot(FusionCharts, FusionMaps, World, FusionTheme, Column2D);\n\nconst chartConfigs = {\n    type: 'maps/worldwithcountries',\n    renderAt: 'world-map',\n    width: '650',\n    height: '450',\n    dataFormat: 'json',\n    dataSource: {\n      \"map\": {\n        \"theme\": \"fusion\",\n        \"caption\": \"Played Against\",\n        \"subcaption\": \"Win Ratio\"   \n       \n        \n      },\n      \"colorrange\": {\n        \"minvalue\": \"0\",\n        \"startlabel\": \"Low\",\n        \"endlabel\": \"High\",\n        \"code\": \"#FF4411\",\n        \"gradient\": \"1\",\n        \"color\": [{\n          \"maxvalue\": \"25\",\n          \"code\": \"#FFDD44\",\n          \"displayValue\": \"Median\"\n        }, {\n          \"maxvalue\": \"100\",\n          \"code\": \"#6baa01\"\n        }]\n      },\n      \"data\": [{\n        \"id\": \"116\",\n        \"value\":\"10\",\n        \"link\": \"newchart-json-pak\",\n        \"showLabel\":\"1\"\n      }, {\n        \"id\": \"104\",\n        \"value\":\"40\",\n        \"link\": \"newchart-json-Texas\",\n      }, {\n        \"id\": \"118\",\n        \"value\":\"80\",\n        \"link\": \"newchart-json-NorthCarolina\",\n\n      },\n      {\n        \"id\": \"05\",\n        \"value\":\"100\",\n        \"link\": \"newchart-json-NorthCarolina\",\n      },\n      {\n        \"id\": \"110\",\n        \"value\":\"0\",\n        \"link\": \"newchart-json-Texas\",\n      }\n     ],\n      \n      \"linkeddata\": [{\n        \"id\": \"pak\",\n        \"linkedchart\": {\n           \" width\": '650',\n            \"height\": '450',\n         \n   \t\t\n    \"chart\": {\n        \"caption\": \"Monthly revenue for last year\",\n        \"subCaption\": \"Harry's SuperMart\",\n        \"xAxisName\": \"Month\",\n        \"yAxisName\": \"Revenues (In USD)\",\n        \"numberPrefix\": \"$\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Jan\",\n            \"value\": \"420000\"\n        },\n        {\n            \"label\": \"Feb\",\n            \"value\": \"810000\"\n        },\n        {\n            \"label\": \"Mar\",\n            \"value\": \"720000\"\n        },\n        {\n            \"label\": \"Apr\",\n            \"value\": \"550000\"\n        },\n        {\n            \"label\": \"May\",\n            \"value\": \"910000\"\n        },\n        {\n            \"label\": \"Jun\",\n            \"value\": \"510000\"\n        },\n        {\n            \"label\": \"Jul\",\n            \"value\": \"680000\"\n        },\n        {\n            \"label\": \"Aug\",\n            \"value\": \"620000\"\n        },\n        {\n            \"label\": \"Sep\",\n            \"value\": \"610000\"\n        },\n        {\n            \"label\": \"Oct\",\n            \"value\": \"490000\"\n        },\n        {\n            \"label\": \"Nov\",\n            \"value\": \"900000\"\n        },\n        {\n            \"label\": \"Dec\",\n            \"value\": \"730000\"\n        }\n    ],\n}, \n      }]\n    },\n    \"events\": {\n\n      \"beforeRender\": function(e) {\n        //Configure the second level chart's properties\n        e.sender.configureLink({\n          type: \"column2d\",\n         renderAt: 'runs',\n          overlayButton: {\n            message: 'Back',\n            fontColor: '880000',\n            bgColor: 'FFEEEE',\n            borderColor: '660000'\n          }\n        }, 0);\n      }\n    }\n  }\n\nconst style={\"display\":\"flex\"}\nconst App=()=>{\n\n    return(\n        <div id=\"frame\">\n           <div className=\"chart-row\" style={style} >\n            <div id=\"world-map\" >\n            <ReactFC {...chartConfigs}/>\n            </div>\n            <div id=\"runs\" className=\"inline\">\n            </div>\n           \n          </div>\n          <div className=\"chart-row\">\n            <div id=\"wickets\" className=\"inline\">\n            </div>    \n            <div id=\"runs_conceded\" className=\"inline\">\n          </div>\n          \n          </div>  \n        </div>\n    )\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}